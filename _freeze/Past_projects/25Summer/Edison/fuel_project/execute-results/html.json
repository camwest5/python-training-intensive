{
  "hash": "e4c6b234d13ca5322dcee7dae97c3931",
  "result": {
    "engine": "jupyter",
    "markdown": "---\n title: Fuel Consumption\n author: Edison Vargas\n date: 2025-01-16\n---\n\n::: {#f01970ee .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf = pd.read_csv(\"data/data/qld_fuel.csv\")\nprint(df)\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Unnamed: 0    SiteId                   Site_Name   Site_Brand  \\\n0                1  61290151               Liberty Surat      Liberty   \n1                2  61290151               Liberty Surat      Liberty   \n2                3  61290151               Liberty Surat      Liberty   \n3                4  61291313          Lowes Mungindi Opt           BP   \n4                5  61291313          Lowes Mungindi Opt           BP   \n...            ...       ...                         ...          ...   \n615972      615973  61478211  Metro Petroleum Walkerston   Metro Fuel   \n615973      615974  61478211  Metro Petroleum Walkerston   Metro Fuel   \n615974      615975  61478212      Pitt Stop Classic Café  Independent   \n615975      615976  61478212      Pitt Stop Classic Café  Independent   \n615976      615977  61478212      Pitt Stop Classic Café  Independent   \n\n       Sites_Address_Line_1 Site_Suburb Site_State  Site_Post_Code  \\\n0        61 Burrowes Street       Surat        QLD            4417   \n1        61 Burrowes Street       Surat        QLD            4417   \n2        61 Burrowes Street       Surat        QLD            4417   \n3         126 Barwon Street    Mungindi        QLD            4497   \n4         126 Barwon Street    Mungindi        QLD            4497   \n...                     ...         ...        ...             ...   \n615972          2 Dutton St  Walkerston        QLD            4751   \n615973          2 Dutton St  Walkerston        QLD            4751   \n615974          34 Palm Ave    Seaforth        QLD            4741   \n615975          34 Palm Ave    Seaforth        QLD            4741   \n615976          34 Palm Ave    Seaforth        QLD            4741   \n\n        Site_Latitude  Site_Longitude    Fuel_Type  Price  \\\n0          -27.151687      149.067742       Diesel   1999   \n1          -27.151687      149.067742  PULP 98 RON   2159   \n2          -27.151687      149.067742     Unleaded   1959   \n3          -28.973467      148.983829       Diesel   1990   \n4          -28.973467      148.983829     Unleaded   1920   \n...               ...             ...          ...    ...   \n615972     -21.160166      149.063728     Unleaded   1959   \n615973     -21.160166      149.063728     Unleaded   1989   \n615974     -20.899741      148.964986     Unleaded   2049   \n615975     -20.899741      148.964986     Unleaded   2039   \n615976     -20.899741      148.964986     Unleaded   2099   \n\n         TransactionDateutc  X_id  \n0       2023-10-12 21:56:00   NaN  \n1       2023-12-30 06:54:00   NaN  \n2       2023-12-30 06:54:00   NaN  \n3       2023-06-12 22:00:00   NaN  \n4       2023-06-12 22:00:00   NaN  \n...                     ...   ...  \n615972  2023-09-20 05:14:00   NaN  \n615973  2023-09-25 08:08:00   NaN  \n615974  2023-04-09 04:15:00   NaN  \n615975  2023-04-09 04:24:00   NaN  \n615976  2023-09-25 06:26:00   NaN  \n\n[615977 rows x 14 columns]\n```\n:::\n:::\n\n\n::: {#e71ed94a .cell execution_count=2}\n``` {.python .cell-code}\n# initial exploration\ndf.columns\n\ndf.info()\n\ndf.head()\n\ndf[\"Fuel_Type\"]\n\npd.unique(df[\"Fuel_Type\"])\n\ndf.describe()\n\ndf[\"Fuel_Type\"].describe()\n\npd.unique(df[\"Site_Suburb\"])\n\ndf[\"Site_Suburb\"].describe()\n\npd.unique(df[\"Site_State\"])\n\ndf[\"Site_State\"].describe()\n\n\ndf[5 : 10]\n\npd.unique(df[\"Site_Name\"])\n\ndf[\"Site_Name\"].describe()\n\ndf.dtypes\n\ndf[\"Price\"].describe()\n\ndf[\"Site_Brand\"].describe()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 615977 entries, 0 to 615976\nData columns (total 14 columns):\n #   Column                Non-Null Count   Dtype  \n---  ------                --------------   -----  \n 0   Unnamed: 0            615977 non-null  int64  \n 1   SiteId                615977 non-null  int64  \n 2   Site_Name             615977 non-null  object \n 3   Site_Brand            615977 non-null  object \n 4   Sites_Address_Line_1  615977 non-null  object \n 5   Site_Suburb           615977 non-null  object \n 6   Site_State            615977 non-null  object \n 7   Site_Post_Code        615977 non-null  int64  \n 8   Site_Latitude         615977 non-null  float64\n 9   Site_Longitude        615977 non-null  float64\n 10  Fuel_Type             615977 non-null  object \n 11  Price                 615977 non-null  int64  \n 12  TransactionDateutc    615977 non-null  object \n 13  X_id                  121457 non-null  float64\ndtypes: float64(3), int64(4), object(7)\nmemory usage: 65.8+ MB\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\ncount       615977\nunique          25\ntop       7 Eleven\nfreq        118040\nName: Site_Brand, dtype: object\n```\n:::\n:::\n\n\n::: {#5ace67d4 .cell execution_count=3}\n``` {.python .cell-code}\n# summaries\ngb = df.groupby(\"Fuel_Type\")\n\navg_fuel_by_price = gb[\"Price\"].agg(\"mean\")\n\nplt.ion()\navg_fuel_by_price.plot()\nplt.show()\n\n# Ensure reasonable heights\ndf = df[ (500 < df[\"Price\"]) & (df[\"Price\"] < 4000)]\n\ndf[\"unit_price\"] = df[\"Price\"] / 1000\n\ndf.to_csv(\"data/filtered_fuel.csv\")\n\nsns.catplot(data = df, x = \"Fuel_Type\", y = \"Price\")\nplt.show()\n\n\nsns.catplot(data = df, x = \"Site_State\", y = \"Fuel_Type\")\nplt.show()\n\n\n# Remove unleaded Fuel_type\ndf1 = df[df[\"Fuel_Type\"] != \"Unleaded\"]\n\n# sns.catplot(data = df1, x = \"Site_State\", y = \"Fuel_Type\")\nplt.show()\n\n# Remove unknown Site_Brand\ndf2 = df[df[\"Site_Brand\"] != \"Unknown\"]\n\n# sns.catplot(data = df2, x = \"Site_State\", y = \"Site_Brand\", kind = \"bar\")\nplt.show()\n\n\nsns.displot(data = df, x = \"Price\", hue = \"Fuel_Type\", kind = \"kde\")\nplt.show()\n\nsns.displot(data = df, x = \"unit_price\", hue = \"Fuel_Type\", kind = \"kde\")\nplt.show()\n\n# sns.catplot(data=df, x=\"unit_price\", y=\"Fuel_type\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](fuel_project_files/figure-html/cell-4-output-1.png){width=583 height=429}\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\uqcwest5\\AppData\\Local\\Temp\\ipykernel_14744\\1557198801.py:13: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](fuel_project_files/figure-html/cell-4-output-3.png){width=487 height=470}\n:::\n\n::: {.cell-output .cell-output-display}\n![](fuel_project_files/figure-html/cell-4-output-4.png){width=485 height=470}\n:::\n\n::: {.cell-output .cell-output-display}\n![](fuel_project_files/figure-html/cell-4-output-5.png){width=636 height=470}\n:::\n\n::: {.cell-output .cell-output-display}\n![](fuel_project_files/figure-html/cell-4-output-6.png){width=636 height=470}\n:::\n:::\n\n\n::: {#d74455ec .cell execution_count=4}\n``` {.python .cell-code}\nimport pandas as pd\nfuel = pd.read_csv(\"data/data/qld_fuel.csv\")\nimport geopandas \nfuel_geo = geopandas.GeoDataFrame(fuel, geometry = geopandas.points_from_xy(x = fuel.Site_Longitude, y = fuel.Site_Latitude)) \nfuel_geo.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](fuel_project_files/figure-html/cell-5-output-1.png){width=366 height=411}\n:::\n:::\n\n\n::: {#2e94b4fd .cell execution_count=5}\n``` {.python .cell-code}\nimport plotly.express as px\nfigure = px.scatter(data_frame = df, x = \"Fuel_Type\", y = \"unit_price\", color = \"Site_State\",\n           facet_col = \"Site_State\", hover_name = \"Site_Brand\",\n           hover_data = \"Site_Suburb\")\n\nfigure.write_html(\"fuel.html\")\n```\n:::\n\n\n::: {#46d24072 .cell color='primary' title='Location of stations' execution_count=6}\n``` {.python .cell-code}\nimport pandas as pd\nfuel = pd.read_csv(\"data/data/qld_fuel.csv\")\nimport geopandas \nfuel_geo = geopandas.GeoDataFrame(fuel, geometry = geopandas.points_from_xy(x = fuel.Site_Longitude, y = fuel.Site_Latitude)) \nfuel_geo.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](fuel_project_files/figure-html/cell-7-output-1.png){width=366 height=411}\n:::\n:::\n\n\n",
    "supporting": [
      "fuel_project_files"
    ],
    "filters": [],
    "includes": {}
  }
}